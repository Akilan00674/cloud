****************add at start and end and forward and backward***************************
#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node* prev;
};
void insertAtBeginning(Node*& head, int value) {
    Node* newNode = new Node{value, nullptr, nullptr};

    if (head == nullptr) {
        head = newNode;
    } else {
        newNode->next = head;
        head->prev = newNode;
        head = newNode;
    }
}

void insertarend(Node*& head, int value) {
    Node* newNode = new Node{value, nullptr, nullptr};
    if (head == nullptr) {
        head = newNode;
    } else {
        Node* temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = newNode;
        newNode->prev = temp;
    }
}

void displayForward(Node* head) {
    Node* temp = head;
    while (temp != nullptr) {
        cout<< temp->data<<" " ; 
        temp = temp->next;
    }
    cout << endl;
}

void displayBackward(Node* head) {
    if (head == nullptr) return;
    Node* temp = head;
    while (temp->next != nullptr) {
        temp = temp->next;
    }
    while (temp != nullptr) {
        cout << temp->data<<" " ; 
        temp = temp->prev;
    }
    cout << endl;
}

int main() {
    int n;cin>>n;
    Node* head = nullptr;

    for(int i = 0;i<n;i++ )
    {
        int value;cin>>value;
        insert(head,value);
    }

    cout << "Doubly linked list forwards: ";
    displayBackward(head);

    cout << "Doubly linked list backwards: ";
    displayForward(head);

    return 0;
}
*************Inserting At Specific location in the list**********************

